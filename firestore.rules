rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only read and write their own profile data.
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    // Users can only manage their own subcollection data (activities, progress).
    match /users/{userId}/{subcollection}/{docId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // All authenticated users can read plans and events.
    match /plans/{planId} {
      allow read: if request.auth != null;
    }

    match /events/{eventId} {
        allow read: if request.auth != null;
    }

    // Users can register for an event by creating a document with their own UID.
    match /events/{eventId}/attendees/{userId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null && request.auth.uid == userId;
    }

    // Bookings collection - users can read their own bookings, admins can read all
    match /bookings/{bookingId} {
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.token.admin == true);
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.token.admin == true);
    }

    // Notifications collection - users can only read their own notifications
    match /notifications/{notificationId} {
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.token.admin == true);
      allow create: if request.auth != null; // Server-side functions can create notifications
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.token.admin == true);
      allow delete: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.token.admin == true);
    }
  }
}